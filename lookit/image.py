import numpy as np
from matplotlib import cm
from matplotlib.colors import ListedColormap
import plotext as plt
import cv2


def colorize_image(img, cmap="fire", vmin=None, vmax=None):
    """Colorize a single-channel image"""

    assert len(img.shape) < 3 or (len(img.shape) == 3 and img.shape[2] == 1)
    if len(img.shape) == 3:
        img.squeeze(axis=2)

    # Get the min and max
    if vmin is None:
        vmin = img.min()
    if vmax is None:
        vmax = img.max()

    # Clip and rescale
    img = np.clip((img - vmin) / (vmax - vmin), 0.0, 1.0)

    if cmap is None or cmap == "None":
        return (np.dstack((img, img, img, np.ones((img.shape)))) * 255).astype(np.uint8)

    if cmap == "fire":
        cmap = FIRE
    else:
        cmap = cm.get_cmap(cmap)

    # Apply the colormap
    return (cmap(img) * 255).astype(np.uint8)


def resizeAndPad(img, size, padColor=0):
    """Take an image of any size and resize it to the target size keeping aspect ratio"""

    h, w = img.shape[:2]
    sh, sw = size[:2]

    # aspect ratio of image
    aspect = w/h
    s_aspect = sw/sh

    # compute scaling and pad sizing
    if aspect > s_aspect: # Limiting factor is height
        new_w = sw
        new_h = np.round(new_w/aspect).astype(int)
        pad_vert = (sh-new_h)/2
        pad_top, pad_bot = np.floor(pad_vert).astype(int), np.ceil(pad_vert).astype(int)
        pad_left, pad_right = 0, 0
    elif aspect < s_aspect: # Limiting factor is width
        new_h = sh
        new_w = np.round(new_h*aspect).astype(int)
        pad_horz = (sw-new_w)/2
        pad_left, pad_right = np.floor(pad_horz).astype(int), np.ceil(pad_horz).astype(int)
        pad_top, pad_bot = 0, 0
    else: # square image
        new_h, new_w = sh, sw
        pad_left, pad_right, pad_top, pad_bot = 0, 0, 0, 0

    # set pad color
    if len(img.shape) == 3 and not isinstance(padColor, (list, tuple, np.ndarray)): # color image but only one color provided
        padColor = [padColor]*3

    # interpolation method
    if w > new_w or h > new_h: # shrinking image
        interp = cv2.INTER_AREA
    else: # stretching image
        interp = cv2.INTER_CUBIC
    scaled_img = cv2.resize(img, (new_w, new_h), interpolation=interp)

    # Pad
    if any([p != 0 for p in [pad_top, pad_bot, pad_left, pad_right]]):
        scaled_img = cv2.copyMakeBorder(scaled_img, pad_top, pad_bot, pad_left, pad_right, borderType=cv2.BORDER_CONSTANT, value=padColor)
    return scaled_img


def summary(img):
    """Display a summary of useful data about an image"""
    img = np.array(img)
    y, x = np.histogram(img, bins=255)
    
    y = y.astype(float)
    y /= y.sum()
    y *= 100

    plt.colorless()
    plt.bar(x, y)
    plt.xlim(x.min(), x.max())
    plt.xlabel("Pixel Intensity Value")
    plt.ylabel("Percent of Pixels")
    tw, th = plt.terminal_size()
    plt.plotsize(None, th-2)
    plt.show()
    
    print(
        "data type: {} | "
        "shape: {} | "
        "height: {} | "
        "width: {} "
        .format(img.dtype, img.shape, img.shape[0], img.shape[1])
    )

def vcutstack(img, size=None, fill_color=1):
    """Cuts an image in half vertically and stacks it back together horizontally"""
    h = img.shape[0]
    if size is None:
        return np.hstack((img[: int(h / 2), :, :], img[int(h / 2) :, :, :]))

    # Compute how much is left over
    single_h = size[0]
    leftover = int(h / 2) % single_h

    # If there's any left over, add a blank image
    if leftover != 0:
        prev_shape = list(img.shape)
        prev_shape[0] = size[0]
        img = np.vstack((img, np.ones((prev_shape)).astype(img.dtype) * fill_color * 255))

    return vcutstack(img)


def plt2numpy(fig):
    """Convert a matplotlib figure to a numpy array"""
    fig.canvas.draw()
    return np.reshape(
        np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8),
        newshape=(int(fig.bbox.bounds[3]), int(fig.bbox.bounds[2]), -1),
    )


# FIRE   Blue-Purple Hot colormap
FIRE = ListedColormap(np.array([
    [     0,         0,         0,],
    [     0,         0,    0.0275,],
    [     0,         0,    0.0588,],
    [     0,         0,    0.0863,],
    [     0,         0,    0.1176,],
    [     0,         0,    0.1490,],
    [     0,         0,    0.1765,],
    [     0,         0,    0.2078,],
    [     0,         0,    0.2392,],
    [     0,         0,    0.2549,],
    [     0,         0,    0.2706,],
    [     0,         0,    0.2902,],
    [     0,         0,    0.3059,],
    [     0,         0,    0.3216,],
    [     0,         0,    0.3412,],
    [     0,         0,    0.3569,],
    [0.0039,         0,    0.3765,],
    [0.0157,         0,    0.3922,],
    [0.0275,         0,    0.4078,],
    [0.0392,         0,    0.4235,],
    [0.0510,         0,    0.4431,],
    [0.0627,         0,    0.4588,],
    [0.0745,         0,    0.4745,],
    [0.0863,         0,    0.4902,],
    [0.0980,         0,    0.5098,],
    [0.1098,         0,    0.5255,],
    [0.1216,         0,    0.5412,],
    [0.1333,         0,    0.5608,],
    [0.1451,         0,    0.5765,],
    [0.1569,         0,    0.5922,],
    [0.1686,         0,    0.6118,],
    [0.1804,         0,    0.6275,],
    [0.1922,         0,    0.6471,],
    [0.2039,         0,    0.6588,],
    [0.2157,         0,    0.6706,],
    [0.2275,         0,    0.6863,],
    [0.2392,         0,    0.6980,],
    [0.2510,         0,    0.7098,],
    [0.2627,         0,    0.7255,],
    [0.2745,         0,    0.7373,],
    [0.2863,         0,    0.7529,],
    [0.2980,         0,    0.7647,],
    [0.3098,         0,    0.7804,],
    [0.3216,         0,    0.7922,],
    [0.3333,         0,    0.8078,],
    [0.3451,         0,    0.8196,],
    [0.3569,         0,    0.8353,],
    [0.3686,         0,    0.8471,],
    [0.3843,         0,    0.8627,],
    [0.3961,         0,    0.8627,],
    [0.4078,         0,    0.8667,],
    [0.4196,         0,    0.8706,],
    [0.4314,         0,    0.8745,],
    [0.4431,         0,    0.8784,],
    [0.4549,         0,    0.8824,],
    [0.4667,         0,    0.8863,],
    [0.4784,         0,    0.8902,],
    [0.4902,         0,    0.8784,],
    [0.5020,         0,    0.8706,],
    [0.5137,         0,    0.8627,],
    [0.5255,         0,    0.8549,],
    [0.5373,         0,    0.8471,],
    [0.5490,         0,    0.8392,],
    [0.5608,         0,    0.8314,],
    [0.5725,         0,    0.8235,],
    [0.5804,         0,    0.8078,],
    [0.5882,         0,    0.7922,],
    [0.5961,         0,    0.7804,],
    [0.6039,         0,    0.7647,],
    [0.6118,         0,    0.7490,],
    [0.6196,         0,    0.7373,],
    [0.6275,         0,    0.7216,],
    [0.6353,         0,    0.7098,],
    [0.6392,         0,    0.6941,],
    [0.6431,         0,    0.6784,],
    [0.6510,         0,    0.6627,],
    [0.6549,         0,    0.6510,],
    [0.6588,         0,    0.6353,],
    [0.6667,         0,    0.6196,],
    [0.6706,         0,    0.6039,],
    [0.6784,         0,    0.5922,],
    [0.6824,         0,    0.5765,],
    [0.6863,         0,    0.5608,],
    [0.6941,         0,    0.5490,],
    [0.6980,         0,    0.5333,],
    [0.7020,         0,    0.5176,],
    [0.7098,         0,    0.5059,],
    [0.7137,         0,    0.4902,],
    [0.7216,         0,    0.4784,],
    [0.7255,         0,    0.4627,],
    [0.7294,         0,    0.4471,],
    [0.7373,         0,    0.4353,],
    [0.7412,         0,    0.4196,],
    [0.7451,         0,    0.4039,],
    [0.7529,         0,    0.3922,],
    [0.7569,         0,    0.3765,],
    [0.7647,         0,    0.3647,],
    [0.7686,    0.0039,    0.3490,],
    [0.7765,    0.0118,    0.3333,],
    [0.7804,    0.0196,    0.3216,],
    [0.7882,    0.0275,    0.3059,],
    [0.7922,    0.0314,    0.2902,],
    [0.8000,    0.0392,    0.2784,],
    [0.8039,    0.0471,    0.2627,],
    [0.8118,    0.0549,    0.2510,],
    [0.8157,    0.0627,    0.2353,],
    [0.8196,    0.0745,    0.2196,],
    [0.8235,    0.0824,    0.2078,],
    [0.8314,    0.0941,    0.1922,],
    [0.8353,    0.1059,    0.1765,],
    [0.8392,    0.1137,    0.1647,],
    [0.8431,    0.1255,    0.1490,],
    [0.8510,    0.1373,    0.1373,],
    [0.8549,    0.1451,    0.1216,],
    [0.8627,    0.1569,    0.1059,],
    [0.8667,    0.1686,    0.0902,],
    [0.8745,    0.1804,    0.0784,],
    [0.8784,    0.1882,    0.0627,],
    [0.8863,    0.2000,    0.0471,],
    [0.8902,    0.2118,    0.0314,],
    [0.8980,    0.2235,    0.0196,],
    [0.9020,    0.2314,    0.0157,],
    [0.9059,    0.2431,    0.0118,],
    [0.9137,    0.2549,    0.0118,],
    [0.9176,    0.2667,    0.0078,],
    [0.9216,    0.2745,    0.0039,],
    [0.9294,    0.2863,    0.0039,],
    [0.9333,    0.2980,         0,],
    [0.9412,    0.3098,         0,],
    [0.9451,    0.3176,         0,],
    [0.9529,    0.3294,         0,],
    [0.9569,    0.3412,         0,],
    [0.9647,    0.3529,         0,],
    [0.9686,    0.3608,         0,],
    [0.9765,    0.3725,         0,],
    [0.9804,    0.3843,         0,],
    [0.9882,    0.3961,         0,],
    [0.9882,    0.4039,         0,],
    [0.9882,    0.4118,         0,],
    [0.9922,    0.4196,         0,],
    [0.9922,    0.4275,         0,],
    [0.9922,    0.4353,         0,],
    [0.9961,    0.4431,         0,],
    [0.9961,    0.4510,         0,],
    [1.0000,    0.4588,         0,],
    [1.0000,    0.4667,         0,],
    [1.0000,    0.4745,         0,],
    [1.0000,    0.4824,         0,],
    [1.0000,    0.4902,         0,],
    [1.0000,    0.4980,         0,],
    [1.0000,    0.5059,         0,],
    [1.0000,    0.5137,         0,],
    [1.0000,    0.5216,         0,],
    [1.0000,    0.5255,         0,],
    [1.0000,    0.5333,         0,],
    [1.0000,    0.5412,         0,],
    [1.0000,    0.5490,         0,],
    [1.0000,    0.5529,         0,],
    [1.0000,    0.5608,         0,],
    [1.0000,    0.5686,         0,],
    [1.0000,    0.5765,         0,],
    [1.0000,    0.5804,         0,],
    [1.0000,    0.5882,         0,],
    [1.0000,    0.5961,         0,],
    [1.0000,    0.6039,         0,],
    [1.0000,    0.6078,         0,],
    [1.0000,    0.6157,         0,],
    [1.0000,    0.6235,         0,],
    [1.0000,    0.6314,         0,],
    [1.0000,    0.6353,         0,],
    [1.0000,    0.6431,         0,],
    [1.0000,    0.6510,         0,],
    [1.0000,    0.6588,         0,],
    [1.0000,    0.6627,         0,],
    [1.0000,    0.6706,         0,],
    [1.0000,    0.6784,         0,],
    [1.0000,    0.6863,         0,],
    [1.0000,    0.6902,         0,],
    [1.0000,    0.6980,         0,],
    [1.0000,    0.7059,         0,],
    [1.0000,    0.7137,         0,],
    [1.0000,    0.7216,         0,],
    [1.0000,    0.7294,         0,],
    [1.0000,    0.7373,         0,],
    [1.0000,    0.7451,         0,],
    [1.0000,    0.7490,         0,],
    [1.0000,    0.7569,         0,],
    [1.0000,    0.7647,         0,],
    [1.0000,    0.7725,         0,],
    [1.0000,    0.7804,         0,],
    [1.0000,    0.7882,         0,],
    [1.0000,    0.7961,         0,],
    [1.0000,    0.8039,         0,],
    [1.0000,    0.8078,         0,],
    [1.0000,    0.8157,         0,],
    [1.0000,    0.8235,         0,],
    [1.0000,    0.8314,         0,],
    [1.0000,    0.8353,         0,],
    [1.0000,    0.8431,         0,],
    [1.0000,    0.8510,         0,],
    [1.0000,    0.8588,         0,],
    [1.0000,    0.8627,         0,],
    [1.0000,    0.8706,         0,],
    [1.0000,    0.8784,         0,],
    [1.0000,    0.8863,         0,],
    [1.0000,    0.8941,         0,],
    [1.0000,    0.9020,         0,],
    [1.0000,    0.9098,         0,],
    [1.0000,    0.9176,         0,],
    [1.0000,    0.9216,    0.0157,],
    [1.0000,    0.9294,    0.0314,],
    [1.0000,    0.9373,    0.0510,],
    [1.0000,    0.9451,    0.0667,],
    [1.0000,    0.9490,    0.0824,],
    [1.0000,    0.9569,    0.1020,],
    [1.0000,    0.9647,    0.1176,],
    [1.0000,    0.9725,    0.1373,],
    [1.0000,    0.9725,    0.1647,],
    [1.0000,    0.9765,    0.1961,],
    [1.0000,    0.9804,    0.2275,],
    [1.0000,    0.9843,    0.2588,],
    [1.0000,    0.9882,    0.2902,],
    [1.0000,    0.9922,    0.3216,],
    [1.0000,    0.9961,    0.3529,],
    [1.0000,    1.0000,    0.3843,],
    [1.0000,    1.0000,    0.4118,],
    [1.0000,    1.0000,    0.4431,],
    [1.0000,    1.0000,    0.4745,],
    [1.0000,    1.0000,    0.5059,],
    [1.0000,    1.0000,    0.5333,],
    [1.0000,    1.0000,    0.5647,],
    [1.0000,    1.0000,    0.5961,],
    [1.0000,    1.0000,    0.6275,],
    [1.0000,    1.0000,    0.6549,],
    [1.0000,    1.0000,    0.6863,],
    [1.0000,    1.0000,    0.7176,],
    [1.0000,    1.0000,    0.7490,],
    [1.0000,    1.0000,    0.7804,],
    [1.0000,    1.0000,    0.8118,],
    [1.0000,    1.0000,    0.8431,],
    [1.0000,    1.0000,    0.8745,],
    [1.0000,    1.0000,    0.8902,],
    [1.0000,    1.0000,    0.9059,],
    [1.0000,    1.0000,    0.9216,],
    [1.0000,    1.0000,    0.9373,],
    [1.0000,    1.0000,    0.9529,],
    [1.0000,    1.0000,    0.9686,],
    [1.0000,    1.0000,    0.9843,],
    [1.0000,    1.0000,    1.0000,],
    [1.0000,    1.0000,    1.0000,],
    [1.0000,    1.0000,    1.0000,],
    [1.0000,    1.0000,    1.0000,],
    [1.0000,    1.0000,    1.0000,],
    [1.0000,    1.0000,    1.0000,],
    [1.0000,    1.0000,    1.0000,],
    [1.0000,    1.0000,    1.0000,],
]))